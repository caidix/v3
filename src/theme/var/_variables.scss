$whSize: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
  auto: auto,
);
$sizes: (
  0: 0,
  1: 4px,
  2: 8px,
  3: 12px,
  4: 16px,
  5: 20px,
  6: 24px,
);

$directions: (
  t: top,
  r: right,
  b: bottom,
  l: left,
);

$spaceTypes: (
  m: margin,
  p: padding,
);

$displayType: (none, inline, block, inline-block, table, table-row, table-cell, flex, inline-flex);

$flexDirection: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
  baseline: baseline,
  stretch: stretch,
);
$colors: (
  --blue: #007bff,
  --indigo: #6610f2,
  --purple: #6f42c1,
  --pink: #e83e8c,
  --red: #dc3545,
  --orange: #fd7e14,
  --yellow: #ffc107,
  --green: #28a745,
  --teal: #20c997,
  --cyan: #17a2b8,
  --white: #fff,
  --gray: #6c757d,
  --gray-dark: #343a40,
  --primary: #007bff,
  --secondary: #6c757d,
  --success: #28a745,
  --info: #17a2b8,
  --warning: #ffc107,
  --danger: #dc3545,
  --light: #f8f9fa,
  --dark: #343a40,
);
@each $key in (left, right, center) {
  .text-#{$key} {
    text-align: #{$key} !important;
  }
}

@each $key, $color in $colors {
  .border#{$key} {
    border-color: #{$color} !important;
  }
  .text#{$key} {
    color: #{$color} !important;
  }
  .bg#{$key} {
    background-color: #{$color} !important;
  }
}

.ba0 {
  border: 0 !important;
}
@each $directionKey, $direction in $directions {
  .b#{$directionKey}-#{0} {
    border-#{$direction}: 0 !important;
  }
}

@each $key in (static, relative, absolute, fixed, sticky) {
  .position-#{$key} {
    position: #{$key} !important;
  }
}

@each $key in (top, bottom) {
  .fixed-#{$key} {
    position: fixed;
    @if $key == 'top' {
      top: 0;
    } @else {
      bottom: 0;
    }

    right: 0;
    left: 0;
    z-index: 1030;
  }
}

@each $key in (auto, hidden) {
  .overflow-#{$key} {
    overflow: #{$key} !important;
  }
}

@each $key in (left, right, none) {
  .float-#{$key} {
    float: #{$key} !important;
  }
}

@each $key, $val in $whSize {
  .w-#{$key} {
    width: #{$val} !important;
  }
  .h-#{$key} {
    width: #{$val} !important;
  }
}

@each $sizeKey, $size in $sizes {
  .ft-#{$sizeKey} {
    font-size: #{$size};
  }
}

/**
 * margin/padding
 */
@each $typeKey, $type in $spaceTypes {
  @each $sizeKey, $size in $sizes {
    // mt-0, mr-0, mb-0, ml-0
    @each $directionKey, $direction in $directions {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size;
      }
    }

    // mx-0, my-0
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size;
      #{$type}-right: $size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size;
      #{$type}-bottom: $size;
    }

    // ma0
    .#{$typeKey}a-#{$sizeKey} {
      #{$type}: $size;
    }
  }
}

@each $key in $displayType {
  .d-#{$key} {
    display: #{$key} !important;
  }
}

@each $key in (row, column, row-reverse, column-reverse) {
  .flex-#{$key} {
    flex-direction: #{$key} !important;
  }
}

@each $key in (wrap, nowrap, wrap-reverse) {
  .flex-#{$key} {
    flex-wrap: #{$key} !important;
  }
}

@each $key, $val in $flexDirection {
  .justify-#{$key} {
    justify-content: #{$val} !important;
  }
  .items-#{$key} {
    align-items: #{$val} !important;
  }
  .content-#{$key} {
    align-content: #{$val} !important;
  }
  .self-#{$key} {
    align-self: #{$val} !important;
  }
}

.flex-auto {
  flex: 1 1 auto;
  min-width: 0;
  min-height: 0;
}
